package me.zhengjie.modules.stat.service.impl;

import me.zhengjie.modules.stat.domain.VulnerabilityStat;
import me.zhengjie.modules.stat.repository.VulnerabilityStatRepository;
import me.zhengjie.modules.stat.service.VulnerabilityStatService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.time.LocalDateTime;

@Service
public class VulnerabilityStatServiceImpl extends BaseStatServiceImpl<VulnerabilityStat, VulnerabilityStatRepository> implements VulnerabilityStatService {
    
    @Autowired
    public VulnerabilityStatServiceImpl(VulnerabilityStatRepository repository) {
        super(repository);
    }

    @Override
    protected String getDefaultSortField() {
        return "foundTime";
    }

    @Override
    protected void setCreateTime(VulnerabilityStat entity) {
        if (entity.getCreatedAt() == null) {
            entity.setCreatedAt(LocalDateTime.now());
        }
    }

    @Override
    protected void setUpdateTime(VulnerabilityStat entity) {
        // VulnerabilityStat 没有 updatedAt 字段，跳过
    }

    @Override
    protected void updateFields(VulnerabilityStat target, VulnerabilityStat source) {
        if (source.getFoundTime() != null) {
            target.setFoundTime(source.getFoundTime());
        }
        if (source.getHighRiskCount() != null) {
            target.setHighRiskCount(source.getHighRiskCount());
        }
        if (source.getMediumRiskCount() != null) {
            target.setMediumRiskCount(source.getMediumRiskCount());
        }
        if (source.getLowRiskCount() != null) {
            target.setLowRiskCount(source.getLowRiskCount());
        }
    }
} 